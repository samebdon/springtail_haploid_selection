thinking of a custom script to calculate either pi at different site degeneracies or 

https://github.com/harvardinformatics/degenotate
degenotate takes as input either a genome FASTA file and a corresponding annotation file (GFF or GTF) OR file or directory of files that contain coding sequences in FASTA format and outputs a bed-like file that contains the degeneracy score (0-, 2-, 3-, or 4-fold) of every coding site.

If given a corresponding VCF file with specified outgroup samples, degenotate can also count synonymous and non-synonymous polymorphisms and fixed differences

python degenotate.py -a [annotation file] -g [genome fasta file] -o [output directory]

python degenotate.py -a [annotation file] -g [genome fasta file] -v [vcf file] -u [sample ID(s) of outgroup in VCF file] -o [output directory]

given degenotate bed
intersect with callable bed
load vcf at these sites
create df of genotype matrix with sequence, positions, and genotypes
intersect with the degenerate bed to get degeneracy labels

would need
- bed of callable sites
- gene annotation
- genome
- codon dictionary
- degeneracy dictionary
- calculate degeneracy of each position
- genotype matrix of sample genotypes per position
- name of gene and chrom associated with position

1) Calculate degeneracy of positions

- genome
- gene annotation
- degeneracy dictionary

2) Generate SFS for all positions
- vcf

3) Combine to generate table with
- gene name
- chromosome
- position
- degeneracy
- sfs
